{"ast":null,"code":"var _jsxFileName = \"/Users/koustubmanchiraju/Documents/BootCamp/googlebooksreact/Client/src/Components/Search.js\";\nimport React, { useState } from 'react';\nimport BookInfo from './BookInfo';\nlet booksArr = [];\n\nfunction Search() {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchBookResult, setSearchBookResult] = useState([]);\n\n  function handleInputChange(e) {\n    const input = e.target.value;\n    console.log(`[input Received]`, input);\n    setSearchInput(input);\n  }\n\n  const container = {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: '20px'\n  };\n\n  async function searchBooks() {\n    const apiBooks = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchInput}+intitle`).then(result => result.json());\n    console.log(`[Object Received From Google Apis]`, apiBooks);\n    const items = apiBooks.items;\n\n    for (let i = 1; i < items.length - 2; i++) {\n      let obj = {\n        title: `title${i}`,\n        image: `image${i}`,\n        desc: `desc${i}`,\n        i: `${i}`\n      };\n      let bookObj = items[i].volumeInfo;\n      let ObjForAll = {\n        ids: obj,\n        book: bookObj\n      };\n      booksArr.push(ObjForAll);\n    }\n\n    ;\n    setSearchBookResult(booksArr);\n    booksArr = [];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group mt-5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    value: searchInput,\n    placeholder: \"Books tile\",\n    \"aria-label\": \"book tile\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-secondary\",\n    id: \"btnSearch\",\n    onClick: searchBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Search\"))), searchBookResult.map((book, index) => /*#__PURE__*/React.createElement(\"div\", {\n    id: index,\n    style: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(BookInfo, Object.assign({}, book, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 86\n    }\n  })))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/koustubmanchiraju/Documents/BootCamp/googlebooksreact/Client/src/Components/Search.js"],"names":["React","useState","BookInfo","booksArr","Search","searchInput","setSearchInput","searchBookResult","setSearchBookResult","handleInputChange","e","input","target","value","console","log","container","flex","flexDirection","flexWrap","padding","searchBooks","apiBooks","fetch","then","result","json","items","i","length","obj","title","image","desc","bookObj","volumeInfo","ObjForAll","ids","book","push","map","index"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nimport BookInfo from './BookInfo';\nlet booksArr =[]; \nfunction Search() {\n    const [searchInput,setSearchInput] = useState('');\n    const [searchBookResult,setSearchBookResult] = useState([]);\n\n    function handleInputChange(e){\n        const input = e.target.value;\n        console.log(`[input Received]`,input);\n        setSearchInput(input);\n\n    }\n    const container = {\n        flex:1,\n        flexDirection:'row',\n        flexWrap:'wrap',\n        padding:'20px'\n    }\n    async function searchBooks(){  \n            const apiBooks = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchInput}+intitle`).then( result=>result.json() );\n            console.log(`[Object Received From Google Apis]`,apiBooks);\n            const items = apiBooks.items;\n            for(let i=1;i<items.length-2;i++){\n                let obj = {\n                    title:`title${i}`,\n                    image:`image${i}`,\n                    desc:`desc${i}`,\n                    i:`${i}`\n                }\n                let bookObj = items[i].volumeInfo;\n                let ObjForAll = {\n                    ids: obj,\n                    book : bookObj\n                }\n                booksArr.push(ObjForAll);\n            };\n            setSearchBookResult(booksArr);\n            booksArr =[];\n    }\n\n    \n    return (\n        <div class='container'>\n            <div class=\"input-group mt-5 mb-3\" >\n                <input type=\"text\" class=\"form-control\" value={searchInput} placeholder=\"Books tile\" aria-label=\"book tile\" onChange={handleInputChange} />\n                    <div class=\"input-group-append\">\n                        <button class='btn btn-secondary' id=\"btnSearch\" onClick={searchBooks}>Search</button>\n                    </div>\n            </div>\n            {searchBookResult.map( (book,index)=><div id={index}  style={container} ><BookInfo {...book} /></div>)}\n        </div>\n        );\n        }\n        \nexport default Search;"]},"metadata":{},"sourceType":"module"}